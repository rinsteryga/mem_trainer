name: CMake Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y --no-install-recommends \
            libssl-dev \
            libpq-dev \
            g++ \
            cmake \
            ninja-build

      - name: Configure
        run: |
          mkdir build
          cd build
          cmake -G Ninja -DCMAKE_BUILD_TYPE=Release ..

      - name: Build
        run: |
          cd build
          cmake --build . --parallel

      - name: Verify executable
        run: |
          file build/mem_trainer
          ldd build/mem_trainer | grep -E "(ssl|pq)"

  build-windows:
    runs-on: windows-latest
    timeout-minutes: 45

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-ninja

      - name: Get MinGW path
        shell: bash
        run: |
          # Получаем путь к gcc и преобразуем в Windows формат
          MINGW_PATH_WIN=$(cygpath -w $(dirname $(which gcc)))
          echo "MINGW_PATH=$MINGW_PATH_WIN" >> $GITHUB_ENV
          echo "CMAKE_C_COMPILER=$MINGW_PATH_WIN\\bin\\gcc.exe" >> $GITHUB_ENV
          echo "CMAKE_CXX_COMPILER=$MINGW_PATH_WIN\\bin\\g++.exe" >> $GITHUB_ENV

      - name: Setup vcpkg
        shell: bash
        run: |
          git clone https://github.com/microsoft/vcpkg
          cd vcpkg
          ./bootstrap-vcpkg.bat
          ./vcpkg install openssl:x64-mingw-static libpq:x64-mingw-static --triplet=x64-mingw-static
          echo "VCPKG_ROOT=${GITHUB_WORKSPACE}\\vcpkg" >> $GITHUB_ENV
          echo "CMAKE_TOOLCHAIN_FILE=${GITHUB_WORKSPACE}\\vcpkg\\scripts\\buildsystems\\vcpkg.cmake" >> $GITHUB_ENV

      - name: Configure with vcpkg
        shell: bash
        run: |
          mkdir build
          cd build
          cmake -G Ninja \
            -DCMAKE_BUILD_TYPE=Release \
            -DVCPKG_TARGET_TRIPLET=x64-mingw-static \
            -DCMAKE_TOOLCHAIN_FILE="$CMAKE_TOOLCHAIN_FILE" \
            -DCMAKE_C_COMPILER="$CMAKE_C_COMPILER" \
            -DCMAKE_CXX_COMPILER="$CMAKE_CXX_COMPILER" \
            -DVCPKG_ROOT="$VCPKG_ROOT" \
            ..

      - name: Build
        shell: bash
        run: |
          cd build
          cmake --build . --parallel

      - name: Verify executable
        run: |
          cd build
          dir *.exe
          bash -c "ldd mem_trainer.exe | grep -i 'ssl\|pq'"