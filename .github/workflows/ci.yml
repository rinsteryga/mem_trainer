name: CMake Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update -q
        sudo apt-get install -y --no-install-recommends \
          libssl-dev \
          libpq-dev \
          g++ \
          cmake \
          ninja-build

    - name: Configure and Build
      run: |
        mkdir -p build && cd build
        cmake -G Ninja -DCMAKE_BUILD_TYPE=Release ..
        cmake --build . --parallel 2

    - name: Verify executable
      run: |
        file build/mem_trainer
        ldd build/mem_trainer | grep -E 'ssl|pq'

  build-windows:
    runs-on: windows-latest
    timeout-minutes: 45

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup MSYS2 and MinGW
      uses: msys2/setup-msys2@v2
      with:
        update: false
        install: >-
          mingw-w64-x86_64-gcc
          mingw-w64-x86_64-cmake
          mingw-w64-x86_64-ninja
          mingw-w64-x86_64-ccache

    - name: Setup VCPKG
      shell: bash
      run: |
        git clone https://github.com/microsoft/vcpkg
        cd vcpkg
        ./bootstrap-vcpkg.sh -disableMetrics
        ./vcpkg install openssl:x64-mingw-static libpq:x64-mingw-static --triplet=x64-mingw-static
        echo "VCPKG_ROOT=$(pwd)" >> $GITHUB_ENV

    - name: Configure and Build
      shell: bash
      run: |
        mkdir -p build && cd build
        cmake -G Ninja \
          -DCMAKE_TOOLCHAIN_FILE=../vcpkg/scripts/buildsystems/vcpkg.cmake \
          -DVCPKG_TARGET_TRIPLET=x64-mingw-static \
          -DCMAKE_C_COMPILER=gcc \
          -DCMAKE_CXX_COMPILER=g++ \
          -DCMAKE_MAKE_PROGRAM=ninja ..
        cmake --build . --parallel 2

    - name: Verify executable
      shell: cmd
      run: |
        cd build
        dir /s /b *.exe
        dumpbin /DEPENDENTS Release\mem_trainer.exe | findstr /i "ssl pq"