name: CMake Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y --no-install-recommends \
            libssl-dev \
            libpq-dev \
            g++ \
            cmake \
            ninja-build

      - name: Configure
        run: |
          mkdir build
          cd build
          cmake -G Ninja -DCMAKE_BUILD_TYPE=Release ..

      - name: Build
        run: |
          cd build
          cmake --build . --parallel

      - name: Verify executable
        run: |
          file build/mem_trainer
          ldd build/mem_trainer | grep -E "(ssl|pq)"

  build-windows:
    runs-on: windows-latest
    timeout-minutes: 45

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-ninja
            mingw-w64-x86_64-pkg-config

      - name: Setup vcpkg
        shell: bash
        run: |
          git clone https://github.com/microsoft/vcpkg
          cd vcpkg
          ./bootstrap-vcpkg.sh -disableMetrics
          ./vcpkg integrate install
          
          ./vcpkg install --triplet=x64-mingw-static
          
          echo "VCPKG_ROOT=$(pwd)" >> $GITHUB_ENV
          echo "CMAKE_TOOLCHAIN_FILE=$(pwd)/scripts/buildsystems/vcpkg.cmake" >> $GITHUB_ENV

      - name: Verify installations
        shell: bash
        run: |
          echo "=== OpenSSL ==="
          ls -la "$VCPKG_ROOT/installed/x64-mingw-static/include/openssl"
          ls -la "$VCPKG_ROOT/installed/x64-mingw-static/lib/libssl*"
          
          echo "=== PostgreSQL ==="
          ls -la "$VCPKG_ROOT/installed/x64-mingw-static/include/postgresql"
          ls -la "$VCPKG_ROOT/installed/x64-mingw-static/lib/libpq*"

      - name: Configure with vcpkg
        shell: bash
        run: |
          mkdir build
          cd build
          cmake -G Ninja \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_TOOLCHAIN_FILE="$CMAKE_TOOLCHAIN_FILE" \
            -DVCPKG_TARGET_TRIPLET=x64-mingw-static \
            ..

      - name: Build
        shell: bash
        run: |
          cd build
          cmake --build . --parallel

      - name: Verify executable
        shell: bash
        run: |
          cd build
          file mem_trainer.exe
          ldd mem_trainer.exe | grep -i 'ssl\|pq'